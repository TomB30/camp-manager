openapi: 3.0.3
info:
  title: Summer Camp Manager API
  version: 1.0.0
  description: API for managing summer camp operations including campers, events, rooms, and staff members

components:
  schemas:
    Camper:
      type: object
      required:
        - id
        - firstName
        - lastName
        - age
        - gender
        - parentContact
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          minimum: 5
          maximum: 18
        gender:
          type: string
          enum: [male, female]
        parentContact:
          type: string
        allergies:
          type: array
          items:
            type: string
        medicalNotes:
          type: string
        photoUrl:
          type: string
        registrationDate:
          type: string
          format: date-time
        housingRoomId:
          type: string
          format: uuid
          description: ID of the housing room assigned to this camper (deprecated - use familyGroupId instead)
        familyGroupId:
          type: string
          format: uuid
          description: ID of the family group this camper belongs to
        sessionId:
          type: string
          format: uuid
          description: ID of the camp session this camper is registered for

    StaffMember:
      type: object
      required:
        - id
        - firstName
        - lastName
        - role
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string
          enum: [counselor, supervisor, director, nurse, instructor]
        email:
          type: string
          format: email
        phone:
          type: string
        certifications:
          type: array
          items:
            type: string
          description: Staff certifications (deprecated - use certificationIds)
        certificationIds:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of certifications this staff member holds
        photoUrl:
          type: string
        managerId:
          type: string
          format: uuid
          description: ID of the staff member who manages this person

    Location:
      type: object
      required:
        - id
        - name
        - capacity
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        capacity:
          type: integer
          minimum: 1
        type:
          type: string
          enum: [classroom, activity, sports, dining, outdoor, arts]
        areaId:
          type: string
          format: uuid
          description: ID of the physical area where this location is situated
        equipment:
          type: array
          items:
            type: string
        notes:
          type: string

    HousingRoom:
      type: object
      required:
        - id
        - name
        - beds
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        beds:
          type: integer
          minimum: 1
          description: Number of beds in this housing room
        areaId:
          type: string
          format: uuid
          description: ID of the physical area where this housing room is located

    Area:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [indoor, outdoor, facility, field, water, other]
        capacity:
          type: integer
          minimum: 1
        equipment:
          type: array
          items:
            type: string
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Event:
      type: object
      required:
        - id
        - title
        - startTime
        - endTime
        - locationId
        - capacity
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        locationId:
          type: string
          format: uuid
        capacity:
          type: integer
          minimum: 1
        assignedStaffIds:
          type: array
          items:
            type: string
            format: uuid
        enrolledCamperIds:
          type: array
          items:
            type: string
            format: uuid
        type:
          type: string
          enum: [activity, sports, arts, education, meal, free-time]
        requiredCertifications:
          type: array
          items:
            type: string
        color:
          type: string
          description: Hex color code for calendar display (deprecated - use colorId)
        colorId:
          type: string
          format: uuid
        programId:
          type: string
          format: uuid
        activityId:
          type: string
          format: uuid
        recurrenceId:
          type: string
          description: Recurrence rule ID - links this event to a recurrence series
        isRecurrenceParent:
          type: boolean
          description: Indicates if this is the parent event of a recurrence series

    Conflict:
      type: object
      properties:
        type:
          type: string
          enum: [room_overcapacity, event_overcapacity, camper_double_booked, staff_double_booked, missing_certification]
        message:
          type: string
        entityId:
          type: string
        conflictingIds:
          type: array
          items:
            type: string

    Label:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        colorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CamperGroupFilter:
      type: object
      properties:
        ageMin:
          type: integer
        ageMax:
          type: integer
        gender:
          type: string
          enum: [male, female]
        hasAllergies:
          type: boolean

    CamperGroup:
      type: object
      required:
        - id
        - name
        - filters
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        colorId:
          type: string
          format: uuid
        filters:
          $ref: '#/components/schemas/CamperGroupFilter'
        familyGroupIds:
          type: array
          items:
            type: string
            format: uuid
          description: Optional array of family group IDs to include
        labelIds:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of labels assigned to this group
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    FamilyGroup:
      type: object
      required:
        - id
        - name
        - housingRoomId
        - staffMemberIds
        - sessionId
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        housingRoomId:
          type: string
          format: uuid
          description: Required - each family group must be assigned to a housing room
        staffMemberIds:
          type: array
          items:
            type: string
            format: uuid
          description: Staff members assigned to this family group
        sessionId:
          type: string
          format: uuid
          description: ID of the camp session this family group belongs to
        colorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Activity:
      type: object
      required:
        - id
        - name
        - programIds
        - durationMinutes
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        programIds:
          type: array
          items:
            type: string
            format: uuid
          description: References to programs this activity belongs to
        durationMinutes:
          type: integer
          description: Default duration
        defaultLocationId:
          type: string
          format: uuid
          description: Default location
        requiredCertifications:
          type: array
          items:
            type: string
          description: Required staff certifications
        minStaff:
          type: integer
          description: Minimum number of staff required
        maxStaff:
          type: integer
          description: Maximum number of staff allowed
        defaultCapacity:
          type: integer
          description: Default camper capacity
        colorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Program:
      type: object
      required:
        - id
        - name
        - activityIds
        - staffMemberIds
        - locationIds
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        colorId:
          type: string
          format: uuid
        activityIds:
          type: array
          items:
            type: string
            format: uuid
          description: Activities belonging to this program
        staffMemberIds:
          type: array
          items:
            type: string
            format: uuid
          description: Staff members associated with this program
        locationIds:
          type: array
          items:
            type: string
            format: uuid
          description: Locations associated with this program
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Certification:
      type: object
      required:
        - id
        - name
        - expirationRequired
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        expirationRequired:
          type: boolean
          description: Whether this certification expires
        validityPeriodMonths:
          type: integer
          description: How long the certification is valid for
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CampColor:
      type: object
      required:
        - id
        - name
        - hexValue
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        hexValue:
          type: string
          description: Hex color value (e.g., "#FF5733")
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CampSession:
      type: object
      required:
        - id
        - name
        - startDate
        - endDate
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        startDate:
          type: string
          format: date
          description: ISO date string
        endDate:
          type: string
          format: date
          description: ISO date string
        description:
          type: string
        maxCampers:
          type: integer
          description: Optional max capacity for this session
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /campers:
    get:
      summary: List all campers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Camper'
    post:
      summary: Create a new camper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Camper'
      responses:
        '201':
          description: Created

  /campers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get camper by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camper'
    put:
      summary: Update camper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Camper'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete camper
      responses:
        '204':
          description: Deleted

  /staff-members:
    get:
      summary: List all staff members
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StaffMember'
    post:
      summary: Create a new staff member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffMember'
      responses:
        '201':
          description: Created

  /staff-members/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get staff member by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffMember'
    put:
      summary: Update staff member
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffMember'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete staff member
      responses:
        '204':
          description: Deleted

  /rooms:
    get:
      summary: List all rooms
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
    post:
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          description: Created

  /rooms/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get room by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    put:
      summary: Update room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete room
      responses:
        '204':
          description: Deleted

  /events:
    get:
      summary: List all events
      parameters:
        - name: startDate
          in: query
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '201':
          description: Created

  /events/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get event by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
    put:
      summary: Update event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete event
      responses:
        '204':
          description: Deleted

  /events/{id}/enroll:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Enroll a camper in an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                camperId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Enrolled
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'

  /events/{id}/unenroll:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Unenroll a camper from an event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                camperId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Unenrolled

  /conflicts:
    get:
      summary: Check for scheduling conflicts
      responses:
        '200':
          description: List of conflicts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Conflict'

  /sleeping-rooms:
    get:
      summary: List all sleeping rooms
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HousingRoom'
    post:
      summary: Create a new sleeping room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HousingRoom'
      responses:
        '201':
          description: Created

  /sleeping-rooms/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get sleeping room by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HousingRoom'
    put:
      summary: Update sleeping room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HousingRoom'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete sleeping room
      responses:
        '204':
          description: Deleted

  /areas:
    get:
      summary: List all areas
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Area'
    post:
      summary: Create a new area
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
      responses:
        '201':
          description: Created

  /areas/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get area by ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Area'
    put:
      summary: Update area
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Area'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete area
      responses:
        '204':
          description: Deleted

